[tool.poetry]
name = "code-review-assistant"
version = "1.0.0"
description = "An intelligent code review assistant powered by Google ADK and Gemini models"
authors = ["Ayo Adedeji <ayoad@google.com>"]
readme = "README.md"
python = "^3.10"
packages = [{include = "code_review_assistant"}]

[tool.poetry.dependencies]
python = "^3.10"
google-adk = {extras = ["vertexai"], version = "^1.0.0"}
google-cloud-aiplatform = {extras = ["adk", "agent_engines"], version = "^1.111"}
google-genai = "^0.7.0"
pycodestyle = "^2.11.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.0"
google-cloud-storage = "^2.10.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.5.0"

[tool.poetry.group.deployment.dependencies]
absl-py = "^2.0.0"
vertexai = "^1.49.0"

[tool.poetry.scripts]
deploy = "deployment.deploy:main"
test-agent = "scripts.test_runner:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | test_code_inputs
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["test_code_inputs/"]

[tool.flake8]
max-line-length = 100
exclude = [".git", "__pycache__", "dist", "build", ".venv", "test_code_inputs"]
ignore = ["E203", "W503", "E501"]