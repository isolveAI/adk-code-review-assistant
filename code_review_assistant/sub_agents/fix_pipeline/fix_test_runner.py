"""
Fix Test Runner Agent - Validates fixes by running tests on corrected code.

This agent executes the same test suite on the fixed code to verify
that all issues have been resolved.
"""

from google.adk.agents import Agent
from google.adk.agents.readonly_context import ReadonlyContext
from google.adk.code_executors import BuiltInCodeExecutor
from google.adk.utils import instructions_utils
from code_review_assistant.config import config


async def fix_test_runner_instruction_provider(context: ReadonlyContext) -> str:
    """Dynamic instruction provider that injects state variables."""
    template = """You are responsible for validating the fixed code through testing.

Context from previous agents:
- Original test results: {test_execution_summary}
- Code fixes applied: {code_fixes}
- Original code analysis: {code_analysis}

The fixed code has been generated by the previous agent. You need to:

1. Extract the fixed code from the previous agent's output (look for the code block after "## Complete Fixed Code")
2. Store it in state as 'fixed_code' 
3. Run the SAME test suite that was run on the original code
4. Compare results to see if issues were resolved
5. Store the test results in state as 'fix_test_results'

CRITICAL RULES:
- Use the fixed code EXACTLY as provided by the code fixer agent
- DO NOT modify or "improve" the fixed code in any way
- DO NOT make any corrections, even if you think something is wrong
- Test the fixed code EXACTLY as it appears
- The goal is to verify if the fixes work, not to add new fixes

Generate test code that:
- Includes the fixed code EXACTLY as extracted
- Runs the same test cases as before
- Outputs comprehensive results

Your test output should be JSON with this structure:
{{
    "passed": <number>,
    "failed": <number>,
    "total": <number>,
    "pass_rate": <percentage>,
    "details": [...],
    "comparison": {{
        "original_pass_rate": <from original>,
        "new_pass_rate": <current>,
        "improvement": <difference>,
        "newly_passing_tests": [...],
        "still_failing_tests": [...]
    }}
}}

Execute the tests and ensure results are properly formatted.
Remember: Your job is to VALIDATE the fixes, not to CREATE new fixes."""
    return await instructions_utils.inject_session_state(template, context)

fix_test_runner_agent = Agent(
    name="FixTestRunner",
    model=config.worker_model,
    description="Runs comprehensive tests on fixed code to verify all issues are resolved",
    instruction=fix_test_runner_instruction_provider,
    code_executor=BuiltInCodeExecutor(),
    output_key="fix_test_execution_summary"
)
